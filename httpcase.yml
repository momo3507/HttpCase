# This is HttpCase code mode
project: '我的HttpCase项目'  # 项目名称
description: '这是使用httpcase自动化测试框架运行测试用例生成的测试报告'   # 项目描述
variables:  # 定义的全局变量
    username: 'wangwei'
    password: '1111'
HttpRequestDefaults: # http请求默认值
    protocol: 'http'
    ip: '127.0.0.1'
    port: '5000'
HttpHeaderDefaults: # 请求头默认值
    Content-Type:
    FrameWork: 'HttpCase'
testsuites:   # 测试套件列表（测试模块列表）
    - name: '用户登录模块'    # 套件（模块）名称
      variables: {}   # 套件（模块）变量
      testcases: # 用例（有序）列表（一个套件中多条用例）
          - name: '登录后进行查询'     # 测试用例名称
            variables: {}   # 用例变量
            httpsteps:  # http请求列表（操作步骤，一条用例含一个或多个http请求）
                - name: '登录平台'      # 测试步骤名称
                  protocol:           # 协议，为空时使用全局参数
                  ip:                 # ip或servername
                  port:               # 端口
                  method: 'POST'        # 请求方法
                  path: '/login'        # uri
                  headers: {}         # 请求头，发起请求时和默认请求头取并集，参数重复时取当前参数
                  params:             # 请求参数 ,exp:/query?name=wangwei
                      t: '${__timeStamp()}'
                  body:               # 请求体，json或其他格式
                      username: '${username}'   # 按照 “用例变量->套件变量->全局变量”的顺序查找变量定义
                      password: '${password}'
                  extract:    # 提取器，从响应中提取数据给指定变量
                      ret: '$.ret'      # 变量存储在用例变量中,jsonpath表达式
                      token: '$.token'
                  assertion:     # 断言，步骤执行成功或失败的判断条件
                      - eq:
                            - 'status_code'   # 被断言的参数如果属于以下参数的一种，代表的是响应中的属性
                            - '200'     # ['_content', 'status_code', 'headers', 'url', 'history', 'encoding', 'reason', 'cookies', 'elapsed', 'request']
                      - eq:
                            - '${ret}'
                            - '0'
                - name: '查询用户'
                  protocol:
                  ip:
                  port:
                  method: 'GET'
                  path: '/query'
                  headers:
                      token: '${token}'
                  params:
                      t: '${__timeStamp()}'
                  body:
                  extract:
                      ret: '$.ret'
                  assertion:
                      - eq:
                            - 'status_code'
                            - '200'
                      - eq:
                            - '${ret}'
                            - '0'
    - name: '用户注销模块'
      variables: {}
      testcases:
          - name: '注销后再进行查询'
            variables: {}
            httpsteps:
              - name: '注销平台'
                protocol:
                ip:
                port:
                method: 'POST'
                path: '/login'
                headers:
                    Content-Type: 'application/json'
                params:
                    t: '${__timeStamp()}'
                body: '{"username":"${username}","password":${password}}'
                extract:
                    ret: '$.ret'
                    token: '$.token'
                    msg: '$.msg'
                assertion:
                    - eq:
                      - 'status_code'
                      - '200'
                    - eq:
                      - '${ret}'
                      - '0'
                    - in:
                        - '${msg}'
                        - '成功'
              - name: '查询用户'
                protocol:
                ip:
                port:
                method: 'GET'
                path: '/query'
                headers:
                    token: '${token}'
                params:
                    t: '${__timeStamp()}'
                body:
                extract:
                    ret: '$.ret'
                assertion:
                    - eq:
                      - 'status_code'
                      - '200'
                    - eq:
                      - '${ret}'
                      - '0'